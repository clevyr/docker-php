name: Docker Build

on:
  schedule:
    - cron: "0 7 * * 1"
  push:
    branches: master

jobs:
  build:
    name: Build ${{ matrix.php_version }}-composer${{ matrix.composer_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ["5.6", "7.2", "7.3", "7.4", "8.0", "8.1"]
        composer_version: ["1", "2"]
        platforms: ["linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8"]
        include:
          - php_version: "5.6"
            composer_version: "2"
            extra_tags: |
              clevyr/php:5
              clevyr/php:5.6
              ghcr.io/clevyr/php:5
              ghcr.io/clevyr/php:5.6
          - php_version: "7.2"
            composer_version: "2"
            extra_tags: |
              clevyr/php:7.2
              ghcr.io/clevyr/php:7.2
          - php_version: "7.3"
            composer_version: "2"
            extra_tags: |
              clevyr/php:7.3
              ghcr.io/clevyr/php:7.3
          - php_version: "7.4"
            composer_version: "2"
            extra_tags: |
              clevyr/php:7
              clevyr/php:7.4
              ghcr.io/clevyr/php:7
              ghcr.io/clevyr/php:7.4
          - php_version: "8.0"
            composer_version: "2"
            extra_tags: |
              clevyr/php:8.0
              ghcr.io/clevyr/php:8.0
          - php_version: "8.1"
            composer_version: "2"
            extra_tags: |
              clevyr/php:8
              clevyr/php:8.1
              clevyr/php:latest
              ghcr.io/clevyr/php:8.1
              ghcr.io/clevyr/php:latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.php_version }}-${{ matrix.composer_version }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.php_version }}-${{ matrix.composer_version }}-
            ${{ runner.os }}-buildx-${{ matrix.php_version }}-
            ${{ runner.os }}-buildx-

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          platforms: ${{ matrix.platforms }}
          tags: |
            ghcr.io/clevyr/php:${{ matrix.php_version }}-composer${{ matrix.composer_version }}
            clevyr/php:${{ matrix.php_version }}-composer${{ matrix.composer_version }}
            ${{ matrix.extra_tags }}
          build-args: |
            PHP_VERSION=${{ matrix.php_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  readme:
    name: Update DockerHub Description
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: clevyr/php
