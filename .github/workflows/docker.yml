name: Docker Build

on:
  schedule:
    - cron: "0 7 * * 1"
  push:
    branches: master

jobs:
  build:
    name: Build ${{ matrix.php_version }}-composer${{ matrix.composer_version }}-${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ["5.6", "7.0", "7.1", "7.2", "7.3", "7.4", "8.0", "8.1"]
        composer_version: ["1", "2"]
        target: ["base", "onbuild"]
        platforms: ["linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8"]
        include:
          - php_version: "5.6"
            composer_version: "2"
            target: "onbuild"
            latest_major: "true"
          - php_version: "5.6"
            composer_version: "1"
            target: "onbuild"
            latest_major: "true"

          - php_version: "7.4"
            composer_version: "2"
            target: "onbuild"
            latest_major: "true"
          - php_version: "7.4"
            composer_version: "1"
            target: "onbuild"
            latest_major: "true"

          - php_version: "8.1"
            composer_version: "1"
            target: "onbuild"
            latest_major: "true"
          - php_version: "8.1"
            composer_version: "2"
            target: "onbuild"
            latest: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            clevyr/php
            ghcr.io/clevyr/php
          flavor: latest=false
          tags: |
            # latest
            type=raw,enable=${{ matrix.latest == 'true' }},value=latest
            # {{major}}.{{minor}}-composer{{major}}-target
            type=semver,pattern={{major}}.{{minor}},suffix=-composer${{ matrix.composer_version }}-${{ matrix.target }},value=${{ matrix.php_version }}.0
            # {{major}}.{{minor}}-composer{{major}}
            type=semver,enable=${{ matrix.target == 'onbuild' }},pattern={{major}}.{{minor}},suffix=-composer${{ matrix.composer_version }},value=${{ matrix.php_version }}.0
            # {{major}}.{{minor}}-target
            type=semver,enable=${{ matrix.composer_version == '2' }},pattern={{major}}.{{minor}},suffix=-${{ matrix.target }},value=${{ matrix.php_version }}.0
            # {{major}}.{{minor}}
            type=semver,enable=${{ matrix.target == 'onbuild' && matrix.composer_version == '2' }},pattern={{major}}.{{minor}},value=${{ matrix.php_version }}.0
            # {{major}}-composer{{major}}
            type=semver,enable=${{ matrix.target == 'onbuild' && (matrix.latest_major == 'true' || matrix.latest == 'true') }},pattern={{major}},suffix=-composer${{ matrix.composer_version }},value=${{ matrix.php_version }}.0
            # {{major}}-target
            type=semver,enable=${{ matrix.composer_version == '2' && (matrix.latest_major == 'true' || matrix.latest == 'true') }},pattern={{major}},suffix=-${{ matrix.target }},value=${{ matrix.php_version }}.0
            # {{major}}
            type=semver,enable=${{ matrix.target == 'onbuild' && matrix.composer_version == '2' && (matrix.latest_major == 'true' || matrix.latest == 'true') }},pattern={{major}},value=${{ matrix.php_version }}.0
            # extra matrix tags
            ${{ matrix.extra_tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          pull: true
          push: true
          platforms: ${{ matrix.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            COMPOSER_VERSION=${{ matrix.composer_version }}
            PHP_VERSION=${{ matrix.php_version }}
          target: ${{ matrix.target }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  readme:
    name: Update DockerHub Description
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: clevyr/php
