#!/bin/bash

set -ef

log() {
    printf '%s: %s\n' "$(basename "$0")" "$@" >&2
}

# Convert old dependency args to new format with defaults
if [ "$INSTALL_BCMATH" != "false" ]; then
    unset INSTALL_BCMATH
    export INSTALL="$INSTALL bcmath"
fi

if [ "$INSTALL_MYSQL" = "true" ]; then
    unset INSTALL_MYSQL
    export INSTALL="$INSTALL mysqli pdo_mysql"
fi

if [ "$INSTALL_OPCACHE" != "false" ]; then
    unset INSTALL_OPCACHE
    export INSTALL="$INSTALL opcache"
fi

if [ "$INSTALL_PGSQL" != "false" ]; then
    unset INSTALL_PGSQL
    export INSTALL="$INSTALL pgsql pdo_pgsql"
fi

if [ "$INSTALL_SQLSRV" = "true" ]; then
    unset INSTALL_SQLSRV
    export INSTALL="$INSTALL sqlsrv pdo_sqlsrv"
fi

# Add workaround for xdebug alpha release
if [ "$INSTALL_XDEBUG" == "true" ]
then
    unset INSTALL_XDEBUG
    export INSTALL_XDEBUG_STABLE=true
fi

# Add old dependency args to new variable

INSTALL=( $INSTALL "$@" )
INSTALL+=( $(env | grep '^INSTALL_.*=true$' | cut -d= -f1 | cut -d_ -f2- | tr '[:upper:]' '[:lower:]' | tr '_' '-') )

DEPS=( $DEPS )
UNTRUSTED_DEPS=( $UNTRUSTED_DEPS )

# Check for dependencies
export BUILD_TMP='/tmp/clevyr-build'
mkdir -p "$BUILD_TMP"
for extension in "${INSTALL[@]}"; do
    case "$extension" in
        pgsql | pdo_pgsql)
            if ! [ -f "$BUILD_TMP/pgsql" ]; then
                log 'Adding postgresql-client to DEPS'
                DEPS+=( 'postgresql-client' )
                touch "$BUILD_TMP/pgsql"
            fi
            ;;
    esac
done

# Install untrusted permanent dependencies
if [ "${#UNTRUSTED_DEPS[@]}" != 0 ]; then
    log "Installing UNTRUSTED_DEPS: ${UNTRUSTED_DEPS[*]}"
    apk add --no-cache --allow-untrusted "${UNTRUSTED_DEPS[@]}"
fi

# Install permanent dependencies
if [ "${#DEPS[@]}" != 0 ]; then
    log "Installing DEPS: ${DEPS[*]}"
    apk add --no-cache "${DEPS[@]}"
fi

# Install all php extensions
log "Beginning install: ${INSTALL[*]}"
install-php-extensions "${INSTALL[@]}"

# Template nginx config
log 'Templating nginx config'
export NGINX_ROOT="${NGINX_ROOT:-/app/public}" \
    NGINX_EXPIRES="${NGINX_EXPIRES:-7d}"
envsubst '$NGINX_ROOT $NGINX_EXPIRES' < /etc/nginx/conf.d/default.conf.tpl > /etc/nginx/conf.d/default.conf

log 'Removing all tmp files'
rm -rf /tmp/*
